<div class="dialog-content">
    <div class="header">
        <h2 class="title">@Title</h2>
        @if (ShowCloseButton)
        {
            <Button Appearance="ButtonAppearance.Transparent"
                    Icon="icon-ic_fluent_dismiss_20_regular"
                    ActiveIcon="icon-ic_fluent_dismiss_20_filled"
                    Size="ButtonSize.Large"
                    Class="fs-4"
                    OnClick="CloseHandler" />
        }
    </div>
    <div class="content">
        <DynamicComponent Type="ContentComponentType" Parameters="ContentParameters" />
    </div>
    @if (Actions.Any())
    {
        <div class="actions">
            @foreach (var action in Actions)
            {
                <Button Text="@action.Text"
                        Appearance="@(action.Primary ? ButtonAppearance.Primary : ButtonAppearance.Default)"
                        OnClick="()=>{ OnActionClick(action); }"
                        form="@action.FormToSumbit"
                        type="@(string.IsNullOrEmpty(action.FormToSumbit) ? "button" : "submit")" />
            }
        </div>
    }
</div>

@code {
    [Parameter] public Type ContentComponentType { get; set; } = default!;
    [Parameter] public IDictionary<string, object?>? ContentParameters { get; set; }
    [Parameter] public string Title { get; set; } = default!;
    [Parameter] public bool ShowCloseButton { get; set; } = true;
    [Parameter] public IEnumerable<DialogAction> Actions { get; set; } = Enumerable.Empty<DialogAction>();
    [CascadingParameter] public Dialog? Dialog { get; set; }

    private void CloseHandler()
    {
        Dialog?.Close();
    }

    private void OnActionClick(DialogAction action)
    {
        if (!string.IsNullOrEmpty(action.FormToSumbit))
            return;
        else if (action.Callback != null && Dialog != null)
            action.Callback(Dialog, action.Result);
        else if (Dialog != null)
            Dialog.Close(action.Result);
    }
}
