<div class="title">
    @if (Intend != ToastIntend.None)
    {
        <i class="@GetIconClass()"></i>
    }
    <div class="text">@Title</div>
    @if (!string.IsNullOrEmpty(DismissTitle))
    {
        <Link Text="@DismissTitle" Class="dismiss" OnClick="OnDismissClick" />
    }
</div>
@if (!string.IsNullOrEmpty(Message))
{
    <div class="message">@Message</div>
}

@code {
    [Parameter] public string Title { get; set; } = default!;
    [Parameter] public string? Message { get; set; }
    [Parameter] public string? DismissTitle { get; set; }
    [Parameter] public ToastIntend Intend { get; set; } = ToastIntend.None;
    [CascadingParameter] public Toast? Toast{ get; set; }

    private string GetIconClass()
    {
        return Intend switch
        {
            ToastIntend.Success => "icon-ic_fluent_checkmark_circle_20_filled color-success-1 me-2",
            ToastIntend.Info => "icon-ic_fluent_info_20_filled color-info-1 me-2",
            ToastIntend.Warning => "icon-ic_fluent_warning_20_filled color-warning-1 me-2",
            ToastIntend.Error => "icon-ic_fluent_dismiss_circle_20_filled color-danger-1 me-2",
            _ => string.Empty
        };
    }

    private void OnDismissClick()
    {
        Toast?.Close(null);
    }
}
