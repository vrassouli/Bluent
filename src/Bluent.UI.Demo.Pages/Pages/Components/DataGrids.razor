@page "/components/data-grids"
@using Bluent.UI.Demo.Pages.Components.ViewModels
@using Microsoft.AspNetCore.Components.Web.Virtualization
@namespace Bluent.UI.Demo.Pages.Components

<div class="p-5 py-md-10 px-md-12">
    <div class="w-100 w-md-50 m-auto">
        <h1>Data Grids</h1>

        <h3>Default</h3>
        <section class="p-7 rounded-5 shadow-3">
            <DataGrid ItemsProvider="LoadData" Style="height: 250px;">
                <Columns>
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.FirstName" Width="120" />
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.LastName" Width="120" />
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.Birthdate" Width="90" />
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.Weight" Width="200" />
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.Height" Width="200" />
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.Nationality" Width="200" />
                </Columns>
            </DataGrid>
        </section>

        <h3>Freezed Columns</h3>
        <section class="p-7 rounded-5 shadow-3">
            <DataGrid ItemsProvider="LoadData" Style="height: 250px;">
                <Columns>
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.FirstName" Width="120" Freezed />
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.LastName" Width="120" Freezed />
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.Birthdate" Width="90" />
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.Weight" Width="200" />
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.Height" Width="200" />
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.Nationality" Width="120" />
                </Columns>
            </DataGrid>
        </section>

        <h3>Custom cells</h3>
        <section class="p-7 rounded-5 shadow-3">
            <DataGrid ItemsProvider="LoadData" Style="height: 250px;">
                <Columns>
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.FirstName" Header="Full name" Width="150" Freezed>
                        <span>@context.FirstName @context.LastName</span>
                    </DataGridColumn>
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.Birthdate" Header="Age" Width="110">
                        @{
                            var today = DateTime.Today;
                            var birthdate = context.Birthdate.ToDateTime(TimeOnly.MinValue);
                            var age = today.Year - birthdate.Year;

                            if (birthdate > today.AddYears(-age))
                                age--;
                        }
                        <div>@age</div>
                    </DataGridColumn>
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.Weight" Width="200" />
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.Height" Width="200" />
                    <DataGridColumn TItem="DataGridSampleModel" Field="x => x.Nationality" Width="120" />
                </Columns>
            </DataGrid>
        </section>
    </div>
</div>

@code {
    private IEnumerable<DataGridSampleModel> _dataSource = DataGridSampleModel.LoadSample(1000);

    private ValueTask<ItemsProviderResult<DataGridSampleModel>> LoadData(ItemsProviderRequest request)
    {
        var data = _dataSource.Skip(request.StartIndex).Take(request.Count);

        var result = new ItemsProviderResult<DataGridSampleModel>(data, _dataSource.Count());

        return ValueTask.FromResult(result);
    }
}