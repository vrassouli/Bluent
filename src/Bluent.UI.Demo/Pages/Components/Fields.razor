@page "/components/fields"
@using Bluent.UI.Interops.Abstractions
@using System.ComponentModel.DataAnnotations

<div class="p-5 py-md-10 px-md-12">
    <div class="w-100 w-md-50 m-auto">
        <h1>Fields</h1>

        <h3>Text field</h3>
        <section class="p-7 rounded-5 shadow-3">
            <Label ForExpression="()=>_textField" Class="d-block mb-1" />
            <TextField @bind-Value="_textField" />
        </section>

        <h3>Addons</h3>
        <section class="p-7 rounded-5 shadow-3">
            <TextField @bind-Value="_textField" placeholder="Search..." accesskey="s">
                <StartAddon>
                    <i class="icon-ic_fluent_search_20_regular"></i>
                </StartAddon>
                <EndAddon>
                    <Button Icon="icon-ic_fluent_search_20_regular" ActiveIcon="icon-ic_fluent_search_20_filled" Appearance="ButtonAppearance.Subtle" />
                </EndAddon>
            </TextField>
        </section>

        <h3>Disabled</h3>
        <section class="p-7 rounded-5 shadow-3">
            <Label ForExpression="()=>_disabledTextField" Class="d-block mb-1" />
            <TextField @bind-Value="_disabledTextField" disabled>
                <StartAddon>
                    <i class="icon-ic_fluent_search_20_regular"></i>
                </StartAddon>
            </TextField>
        </section>

        <h3>Size</h3>
        <section class="p-7 rounded-5 shadow-3">
            <Label ForExpression="()=>_smallTextField" Class="d-block mb-1" />
            <TextField @bind-Value="_smallTextField">
                <StartAddon>
                    <i class="icon-ic_fluent_people_20_regular"></i>
                </StartAddon>
            </TextField>

            <Label ForExpression="()=>_smallTextField" Class="d-block mb-1" />
            <TextField @bind-Value="_smallTextField" Size="FieldSize.Small">
                <StartAddon>
                    <i class="icon-ic_fluent_people_20_regular"></i>
                </StartAddon>
            </TextField>

            <Label ForExpression="()=>_mediumTextField" Class="d-block mb-1 mt-4" />
            <TextField @bind-Value="_mediumTextField" Size="FieldSize.Medium">
                <StartAddon>
                    <i class="icon-ic_fluent_people_20_regular"></i>
                </StartAddon>
            </TextField>

            <Label ForExpression="()=>_largeTextField" Class="d-block mb-1 mt-4" />
            <TextField @bind-Value="_largeTextField" Size="FieldSize.Large">
                <StartAddon>
                    <i class="icon-ic_fluent_people_20_regular"></i>
                </StartAddon>
            </TextField>
        </section>

        <h3>Masked field</h3>
        <section class="p-7 rounded-5 shadow-3">
            <Label ForExpression="()=>_maskPattern" Class="d-block mb-1" />
            <TextField @bind-Value="_maskPattern" Size="FieldSize.Small" />

            <Label ForExpression="()=>_maskedField" Class="d-block mb-1" />
            <MaskedField @bind-Value="_maskedField" Mask="@_maskPattern" autocomplete="off" />

            <pre>
                Typed value: @_maskedField
            </pre>
        </section>

        <h3>Time field</h3>
        <section class="p-7 rounded-5 shadow-3">
            <EditForm Model="this">
                <Label ForExpression="()=>_timeOnly" Class="d-block mb-1" />
                <TimeField @bind-Value="_timeOnly" Size="FieldSize.Small" autocomplete="off" />
                <TimeField @bind-Value="_timeOnly" Seconds Size="FieldSize.Small" autocomplete="off" />
                <ValidationMessage For="() => _timeOnly" />
            </EditForm>
            <pre>
                TimeOnly: @_timeOnly
            </pre>
            
            <EditForm Model="this">
                <Label ForExpression="()=>_dateField" Class="d-block mb-1" />
                <TimeField @bind-Value="_dateField" Size="FieldSize.Small" autocomplete="off" />
                <ValidationMessage For="() => _dateField" />
            </EditForm>
            <pre>
                DateTime: @_dateField
            </pre>
            
            <EditForm Model="this">
                <Label ForExpression="()=>_timeSpan" Class="d-block mb-1" />
                <TimeField @bind-Value="_timeSpan" Size="FieldSize.Small" autocomplete="off" />
                <TimeField @bind-Value="_timeSpan" Seconds Size="FieldSize.Small" autocomplete="off" />
                <ValidationMessage For="() => _timeSpan" />
            </EditForm>
            <pre>
                TimeSpan: @_timeSpan
            </pre>
        </section>

        <h3>Date field</h3>
        <section class="p-7 rounded-5 shadow-3">
            <Label for="smallDateField" Text="Small date field" Class="d-block mb-1" />
            <DateField @bind-Value="_dateField" id="smallDateField" Size="FieldSize.Small" BindValueEvent="oninput" autocomplete="off" />

            <Label ForExpression="()=>_dateField" Class="d-block mb-1 mt-4" />
            <DateField @bind-Value="_dateField" Size="FieldSize.Medium" />

            <Label for="largeDateField" Text="Large date field" Class="d-block mb-1 mt-4" />
            <DateField @bind-Value="_dateField" id="largeDateField" Size="FieldSize.Large" />

            <Label for="disabledDateField" Text="Disabled date field" Class="d-block mb-1 mt-4" />
            <DateField @bind-Value="_dateField" id="disabledDateField" Size="FieldSize.Medium" disabled />
            <pre>
                Date: @_dateField
            </pre>

            <Label for="monthField" Text="Month field" Class="d-block mb-1 mt-4" />
            <DateField @bind-Value="_monthField" id="monthField" Size="FieldSize.Medium" Mode="CalendarMode.MonthSelect" />
            <pre>
                Date: @_monthField
            </pre>
        </section>

        <h3>Numeric field</h3>
        <section class="p-7 rounded-5 shadow-3">
            <EditForm Model="this">
                <Label ForExpression="()=>_numericFormat" Class="d-block mb-1 mt-4" />
                <TextField @bind-Value="_numericFormat" />

                <Label ForExpression="()=>_numericFloat" Class="d-block mb-1 mt-4" />
                <NumericField @bind-Value="_numericFloat" Format="@_numericFormat" />
                <ValidationMessage For="() => _numericFloat" />

                <pre>
                Value: @_numericFloat
            </pre>

            </EditForm>
        </section>

        <h3>Select field</h3>
        <section class="p-7 rounded-5 shadow-3">
            <Label ForExpression="()=>_selectField" Class="d-block mb-1 mt-4" />
            <SelectField @bind-Value="_selectField">
                @foreach (var item in _colors)
                {
                    <option value="@item">@item</option>
                }
            </SelectField>
        </section>

        <h3>Checkbox</h3>
        <section class="p-7 rounded-5 shadow-3">
            <Checkbox @bind-Value="_checkBox" Label="Checkbox" />
        </section>

        <h3>Switch</h3>
        <section class="p-7 rounded-5 shadow-3">
            <Switch @bind-Value="_switch" Label="Switch is On" UncheckedLabel="Switch is Off" />
            <Switch @bind-Value="_switch" Label="Switch is On" UncheckedLabel="Switch is Off" LabelPosition="LabelPosition.Before" />
            <Switch @bind-Value="_disabledOffSwitch" Label="Switch is disabled and On" UncheckedLabel="Switch is disabled and Off" disabled />
            <Switch @bind-Value="_disabledOnSwitch" Label="Switch is disabled and On" UncheckedLabel="Switch is disabled and Off" disabled />
        </section>

        <h3>Textarea field</h3>
        <section class="p-7 rounded-5 shadow-3">
            <Label ForExpression="()=>_textareaField" Class="d-block mb-1" />
            <TextField @bind-Value="_textareaField" Rows="3" />
        </section>

    </div>
</div>

@code {
    [Display(Name = "Example text field")]
    private string? _textField;

    [Display(Name = "Example teaxtarea field")]
    private string? _textareaField;

    [Display(Name = "Disabled text field")]
    private string? _disabledTextField;

    [Display(Name = "Small")]
    private string? _smallTextField;

    [Display(Name = "Medium")]
    private string? _mediumTextField;

    [Display(Name = "Large")]
    private string? _largeTextField;

    [Display(Name = "Date field")]
    private DateTime? _dateField = DateTime.Now;

    [Display(Name = "Month field")]
    private DateTime? _monthField = DateTime.Now;

    [Display(Name = "Numeric field")]
    private float? _numericFloat;

    [Display(Name = "Select field")]
    private string? _numericFormat = "n3";

    [Display(Name = "Select field")]
    private string _selectField = "Green";

    private bool? _checkBox;

    private bool _switch;
    private bool _disabledOffSwitch;
    private bool _disabledOnSwitch = true;

    [Display(Name = "Masked field")]
    private string? _maskedField;
    [Display(Name = "Regular expression")]
    private string _maskPattern = @"^09\d{2}-\d{3}-\d{4}$";

    [Display(Name = "Time only")]
    private TimeOnly? _timeOnly = TimeOnly.FromDateTime(DateTime.Now);

    [Display(Name = "Time span")]
    private TimeSpan _timeSpan = TimeSpan.FromTicks(DateTime.Now.Ticks);

    private List<string> _colors = ["Red", "Green", "Blue"];
}
