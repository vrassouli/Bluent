@page "/components/dropdowns"
@using Bluent.UI.Demo.Pages.Components.ViewModels

<div class="p-5 py-md-10 px-md-12">
    <div class="w-100 w-md-50 m-auto">
        <h1>Dropdown Lists</h1>

        <h3>Default</h3>
        <section class="p-7 rounded-5 shadow-3">
            <DropdownList TItem="DataGridSampleModel"
                          TValue="int?"
                          ItemValue="item => item.Id"
                          ItemText="@(item => item?.FirstName ?? "Name 1")"
                          ItemsProvider="LoadData"
                          Class="w-100"
                          @bind-Value="_selectedItemId">
                <ItemContent>
                    <div>@context.FirstName @context.LastName</div>
                </ItemContent>
            </DropdownList>

            <pre>
                Selected item: @_selectedItemId
            </pre>
        </section>

        <h3>Multiselect</h3>
        <section class="p-7 rounded-5 shadow-3">
            <DropdownList TItem="DataGridSampleModel"
                          TValue="Guid"
                          ItemValue="item => item.Id2"
                          ItemText="item => item?.FirstName"
                          ItemsProvider="LoadData"
                          Class="w-100"
                          @bind-Values="_selectedItemIds">
                <ItemContent>
                    <div>@context.FirstName @context.LastName</div>
                </ItemContent>
            </DropdownList>

            <pre>
                Selected item: @string.Join(", ", _selectedItemIds)
            </pre>
        </section>
    </div>
</div>

@code {
    private IEnumerable<DataGridSampleModel> _dataSource = DataGridSampleModel.LoadSample(1000).ToList();
    private int? _selectedItemId = 1;
    private IEnumerable<Guid> _selectedItemIds = Enumerable.Empty<Guid>();

    private ValueTask<ItemsProviderResult<DataGridSampleModel>> LoadData(FilteredItemsProviderRequest request)
    {
        var query = _dataSource
            .Where(x => request.Filter == null || (x.FirstName + " " + x.LastName).Contains(request.Filter))
            .AsQueryable();

        var data = query
            .Skip(request.StartIndex)
            .Take(request.Count);

        var result = new ItemsProviderResult<DataGridSampleModel>(data, query.Count());

        return ValueTask.FromResult(result);
    }
}