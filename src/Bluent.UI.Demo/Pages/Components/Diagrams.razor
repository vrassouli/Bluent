@page "/components/diagrams"
@using Bluent.UI.Diagrams.Tools.Drawings.Diagram

<Toolbar>
    <ToolbarButton Icon="icon-ic_fluent_cursor_20_regular" ActiveIcon="@(_tool is null ? "icon-ic_fluent_cursor_20_regular" : "icon-ic_fluent_cursor_20_filled")" OnClick="DeselectTool" Toggled="@(_tool is null)" />

    <ToolbarButton Icon="icon-ic_fluent_circle_hint_cursor_20_regular" ActiveIcon="icon-ic_fluent_circle_hint_cursor_20_filled" OnClick="SelectAreaSelectTool" Toggled="@(_tool is DiagramAreaSelectTool)" />
    <ToolbarDivider />
    <ToolbarButton Icon="icon-ic_fluent_arrow_undo_20_regular" ActiveIcon="icon-ic_fluent_arrow_undo_20_filled" OnClick="Undo" disabled="@(!_canUndo)" />
    <ToolbarButton Icon="icon-ic_fluent_arrow_redo_20_regular" ActiveIcon="icon-ic_fluent_arrow_redo_20_filled" OnClick="Redo" disabled="@(!_canRedo)" />
    @*<ToolbarDivider />
    <ToolbarButton Icon="icon-ic_fluent_line_20_regular" ActiveIcon="icon-ic_fluent_line_20_filled" OnClick="SelectLineTool" Toggled="@(_tool is DrawLineTool)" />
 *@    
    <ToolbarButton Tooltip="Rectangle" Icon="icon-ic_fluent_rectangle_landscape_20_regular" ActiveIcon="icon-ic_fluent_rectangle_landscape_20_filled" OnClick="SelectRectTool" Toggled="@(_tool is DrawRectangleNodeTool)" />
    <ToolbarButton Tooltip="Circle" Icon="icon-ic_fluent_circle_20_regular" ActiveIcon="icon-ic_fluent_circle_20_filled" OnClick="SelectCircleTool" Toggled="@(_tool is DrawCircleNodeTool)" />
    <ToolbarDivider />
    <ToolbarButton Tooltip="Rectangle Container" Icon="icon-ic_fluent_rectangle_landscape_20_regular" ActiveIcon="icon-ic_fluent_rectangle_landscape_20_filled" OnClick="SelectRectContainerTool" Toggled="@(_tool is DrawRectangleContainerNodeTool)" />

</Toolbar>

<Stack Orientation="Orientation.Horizontal" Class="flex-fill">
    <Stack Orientation="Orientation.Vertical" Class="gap-1" HorizontalAlignment="StackAlignment.Start">
        Side...
    </Stack>

    <Diagram Class="flex-fill"
             Tool="Tool"
             CommandManager="_commandManager"
             Selection="Core.SelectionMode.Multiple"
             AllowDrag
             AllowPan
             AllowScale>
        <defs>
            <pattern id="grid-pattern" patternUnits="userSpaceOnUse" width="10" height="10">
                <circle cx="0" cy="0" r="0.5" stroke-width="0.5" stroke="none" fill="var(--colorNeutralStrokeAccessible)"></circle>
                <circle cx="0" cy="10" r="0.5" stroke-width="0.5" stroke="none" fill="var(--colorNeutralStrokeAccessible)"></circle>
                <circle cx="10" cy="10" r="0.5" stroke-width="0.5" stroke="none" fill="var(--colorNeutralStrokeAccessible)"></circle>
                <circle cx="10" cy="0" r="0.5" stroke-width="0.5" stroke="none" fill="var(--colorNeutralStrokeAccessible)"></circle>
            </pattern>
        </defs>
        <rect width="100%" height="100%" fill="url(#grid-pattern)"></rect>

    </Diagram>
</Stack>
